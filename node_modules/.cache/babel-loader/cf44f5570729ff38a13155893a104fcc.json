{"ast":null,"code":"var _jsxFileName = \"/Users/yoli/www/react-todo-list-just-add/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react'; //import is like 'let/const/var' and from is like '=' with ending of the path\"\n//changed Header to unicorn and the code still works\n\nimport Unicorn from \"./components/Header\";\nimport List from \"./components/List\";\nimport AddTodo from \"./components/AddTodo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //if u put a string in the useState, it will come out a string, the code below shows the array\n  const [todos, setTodos] = useState([{\n    id: 1,\n    item: \"Drink Water\"\n  }, {\n    id: 2,\n    item: \"Make Healthy Dinner\"\n  }, {\n    id: 3,\n    item: \"Exercise\"\n  }]);\n\n  const addTodo = todo => {\n    const id = Math.ceil(Math.random() * 100000);\n    const newTodo = {\n      id,\n      ...todo\n    };\n    setTodos([...todos, newTodo]);\n  }; //make sure the name above matches the name insaide the div\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Unicorn, {\n      title: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTodo, {\n      onAdd: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      todos: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n} //export is like 'return' for an api\n\n\n_s(App, \"Mz+doWQMU5M/mYB6Xf97AauA4dY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/yoli/www/react-todo-list-just-add/src/App.js"],"names":["useState","Unicorn","List","AddTodo","App","todos","setTodos","id","item","addTodo","todo","Math","ceil","random","newTodo"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CACA;AACA;;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACf;AACE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CACjC;AACEO,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AAFR,GADiC,EAKjC;AACED,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AAFR,GALiC,EASjC;AACED,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE;AAFR,GATiC,CAAD,CAAlC;;AAeA,QAAMC,OAAO,GAAIC,IAAD,IAAU;AACxB,UAAMH,EAAE,GAAGI,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAc,MAAxB,CAAX;AACA,UAAMC,OAAO,GAAG;AAACP,MAAAA,EAAD;AAAK,SAAGG;AAAR,KAAhB;AACAJ,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWS,OAAX,CAAD,CAAR;AACD,GAJD,CAjBa,CAuBb;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEL;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEJ;AAAb;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,C,CAED;;;GAjCSD,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import { useState } from 'react'\n//import is like 'let/const/var' and from is like '=' with ending of the path\"\n//changed Header to unicorn and the code still works\nimport Unicorn from \"./components/Header\";\nimport List from \"./components/List\"\nimport AddTodo from \"./components/AddTodo\"\n\nfunction App() {\n//if u put a string in the useState, it will come out a string, the code below shows the array\n  const [todos, setTodos] = useState([\n    {\n      id: 1,\n      item: \"Drink Water\",\n    },\n    {\n      id: 2,\n      item: \"Make Healthy Dinner\",\n    },\n    {\n      id: 3,\n      item: \"Exercise\",\n    },\n  ]);\n\n  const addTodo = (todo) => {\n    const id = Math.ceil(Math.random()*100000)\n    const newTodo = {id, ...todo}\n    setTodos([...todos, newTodo])\n  }\n\n  //make sure the name above matches the name insaide the div\n  return (\n    <div className=\"container\">\n      <Unicorn title=\"Todo List\" />\n      <AddTodo onAdd={addTodo} />\n      <List todos={todos}/>\n    </div>\n  );\n}\n\n//export is like 'return' for an api\nexport default App;\n"]},"metadata":{},"sourceType":"module"}